// This is your Prisma schema file
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String  @id @default(uuid())
  email         String  @unique
  password      String // Hashed password
  firstName     String?
  lastName      String?
  active        Boolean @default(true)
  // Add OAuth fields
  githubId      String? @unique
  githubProfile String? // Store additional GitHub profile data
  image         String? // Profile image URL

  roles    Role[]       @relation("UserRoles")
  searches UserSearch[] // User's saved searches

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Role {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  users       User[]       @relation("UserRoles")
  permissions Permission[]
}

// Enum for different types of permissions
model PermissionType {
  id         String       @unique
  Permission Permission[]
}

model Permission {
  id       String         @id @default(uuid())
  typeId   String
  roleId   String
  action   String         @default("")
  resource String // The resource this permission applies to
  type     PermissionType @relation(fields: [typeId], references: [id])
  role     Role           @relation(fields: [roleId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@unique([roleId, typeId, resource])
}

model UserSearch {
  id         String   @id @default(uuid())
  userId     String
  searchType String // 'SIMPLE' or 'ADVANCED'
  criteria   String // JSON string of search parameters
  title      String? // Optional user-given name for the search
  favorite   Boolean  @default(false)
  lastUsed   DateTime @default(now())

  // Metadata
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@index([userId, searchType])
  @@index([userId, favorite])
  @@index([lastUsed])
}
